worker_processes auto;

# https://github.com/denji/nginx-tuning

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    aio on;
    tcp_nopush on;
    include mime.types;
    # limit the number of connections per single IP
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    # limit the number of requests for a given session
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=50r/s;

    #    limit_req_zone $binary_remote_addr zone=by_ip:32m rate=10000r/s;
    #    limit_req_status 500;
	# log_format custom '$remote_addr ^ $remote_user [$time_local] ^ '
	# 					'$request ^ $status ^ $body_bytes_sent ^ '
	# 					'$http_referer ^ $http_user_agent ^ $http_x_forwarded_for';
	# access_log /var/log/nginx/access.log custom;

    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

	upstream main-applic_server {
        server main-applic:3007;
    }

    server {
        listen 80;
        listen [::]:80;
        server_name localhost;

        add_header Strict-Transport-Security "max-age=31536000" always;

        tcp_nodelay on;
        client_max_body_size 11m;

        gzip on;
        gzip_types text/xml;
        gzip_types text/javascript;
        gzip_types application/json;
        gzip_types application/x-javascript;
        gzip_types application/javascript;
        gzip_types application/x-font-ttf;
        gzip_types application/ttf;
        gzip_types image/x-icon;
        gzip_types text/plain;
        gzip_types text/css;
        gzip_disable "msie6";

        location / {
            proxy_pass http://main-applic_server;
            proxy_redirect off;
            try_files $uri.html  $uri $uri/ /index.html;
            if ($request_method ~* "(GET|POST|PUT|PATCH)") {
                add_header "Access-Control-Allow-Origin"  *;
            }
            if ($request_method ~* "(OPTIONS)") {
                add_header "Access-Control-Allow-Origin"  *;
                add_header "Access-Control-Allow-Methods" "GET, POST, PUT, PATCH, OPTIONS, HEAD";
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 200;
            }
        }

        location /health {
            access_log off;
            return 200 "nginx is healthy\n";
        }

        location ~ /(static|_next/static) {
            add_header X-Cache-Status $upstream_cache_status;
            sendfile on;
            sendfile_max_chunk 1m;
            expires 30d;
            proxy_ignore_headers Cache-Control;
            proxy_pass http://main-applic_server;
        }

        location /temporary/ {
            alias /opt/files/;
            add_header X-Cache-Status $upstream_cache_status;
            sendfile on;
            sendfile_max_chunk 1m;
            expires 30d;
            # autoindex on;
        }

        location ~ /(sitemaps.xml|sitemap-0.xml|robots.txt) {
            proxy_pass http://main-applic_server;
        }

        location /favicon.* {
            proxy_pass http://main-applic_server;
        }

        location ~* /.php {
            return 404;
        }

        location ~* /.env {
            return 404;
        }

        location /goaccess_web.html {
            auth_basic "Restricted";
            auth_basic_user_file /opt/.htpasswd;
            sendfile on;
            alias /opt/report/report.html;
        }
    }
}
